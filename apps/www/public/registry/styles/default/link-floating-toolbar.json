{
  "dependencies": [
    "@sewell_stephens/late-link"
  ],
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport { cn } from '@sewell_stephens/cn';\nimport { useFormInputProps } from '@sewell_stephens/late-common/react';\nimport {\n  type UseVirtualFloatingOptions,\n  flip,\n  offset,\n} from '@sewell_stephens/late-floating';\nimport {\n  FloatingLinkUrlInput,\n  type LinkFloatingToolbarState,\n  LinkOpenButton,\n  useFloatingLinkEdit,\n  useFloatingLinkEditState,\n  useFloatingLinkInsert,\n  useFloatingLinkInsertState,\n} from '@sewell_stephens/late-link/react';\n\nimport { Icons } from '@/components/icons';\n\nimport { buttonVariants } from './button';\nimport { inputVariants } from './input';\nimport { popoverVariants } from './popover';\nimport { Separator } from './separator';\n\nconst floatingOptions: UseVirtualFloatingOptions = {\n  middleware: [\n    offset(12),\n    flip({\n      fallbackPlacements: ['bottom-end', 'top-start', 'top-end'],\n      padding: 12,\n    }),\n  ],\n  placement: 'bottom-start',\n};\n\nexport interface LinkFloatingToolbarProps {\n  state?: LinkFloatingToolbarState;\n}\n\nexport function LinkFloatingToolbar({ state }: LinkFloatingToolbarProps) {\n  const insertState = useFloatingLinkInsertState({\n    ...state,\n    floatingOptions: {\n      ...floatingOptions,\n      ...state?.floatingOptions,\n    },\n  });\n  const {\n    hidden,\n    props: insertProps,\n    ref: insertRef,\n    textInputProps,\n  } = useFloatingLinkInsert(insertState);\n\n  const editState = useFloatingLinkEditState({\n    ...state,\n    floatingOptions: {\n      ...floatingOptions,\n      ...state?.floatingOptions,\n    },\n  });\n  const {\n    editButtonProps,\n    props: editProps,\n    ref: editRef,\n    unlinkButtonProps,\n  } = useFloatingLinkEdit(editState);\n  const inputProps = useFormInputProps({\n    preventDefaultOnEnterKeydown: true,\n  });\n\n  if (hidden) return null;\n\n  const input = (\n    <div className=\"flex w-[330px] flex-col\" {...inputProps}>\n      <div className=\"flex items-center\">\n        <div className=\"flex items-center pl-3 text-muted-foreground\">\n          <Icons.link className=\"size-4\" />\n        </div>\n\n        <FloatingLinkUrlInput\n          className={inputVariants({ h: 'sm', variant: 'ghost' })}\n          placeholder=\"Paste link\"\n        />\n      </div>\n      <Separator />\n      <div className=\"flex items-center\">\n        <div className=\"flex items-center pl-3 text-muted-foreground\">\n          <Icons.text className=\"size-4\" />\n        </div>\n        <input\n          className={inputVariants({ h: 'sm', variant: 'ghost' })}\n          placeholder=\"Text to display\"\n          {...textInputProps}\n        />\n      </div>\n    </div>\n  );\n\n  const editContent = editState.isEditing ? (\n    input\n  ) : (\n    <div className=\"box-content flex h-9 items-center gap-1\">\n      <button\n        className={buttonVariants({ size: 'sm', variant: 'ghost' })}\n        type=\"button\"\n        {...editButtonProps}\n      >\n        Edit link\n      </button>\n\n      <Separator orientation=\"vertical\" />\n\n      <LinkOpenButton\n        className={buttonVariants({\n          size: 'sms',\n          variant: 'ghost',\n        })}\n      >\n        <Icons.externalLink width={18} />\n      </LinkOpenButton>\n\n      <Separator orientation=\"vertical\" />\n\n      <button\n        className={buttonVariants({\n          size: 'sms',\n          variant: 'ghost',\n        })}\n        type=\"button\"\n        {...unlinkButtonProps}\n      >\n        <Icons.unlink width={18} />\n      </button>\n    </div>\n  );\n\n  return (\n    <>\n      <div\n        className={cn(popoverVariants(), 'w-auto p-1')}\n        ref={insertRef}\n        {...insertProps}\n      >\n        {input}\n      </div>\n\n      <div\n        className={cn(popoverVariants(), 'w-auto p-1')}\n        ref={editRef}\n        {...editProps}\n      >\n        {editContent}\n      </div>\n    </>\n  );\n}\n",
      "name": "link-floating-toolbar.tsx"
    }
  ],
  "name": "link-floating-toolbar",
  "registryDependencies": [
    "button",
    "input",
    "popover",
    "separator"
  ],
  "type": "components:plate-ui"
}