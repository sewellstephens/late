{
  "dependencies": [
    "@sewell_stephens/late-mention"
  ],
  "files": [
    {
      "content": "import React from 'react';\n\nimport type { TMentionElement } from '@sewell_stephens/late-mention';\n\nimport { cn, withRef } from '@sewell_stephens/cn';\nimport { getHandler } from '@sewell_stephens/late-common';\nimport { LateElement, useElement } from '@sewell_stephens/late-common/react';\nimport { useFocused, useSelected } from 'slate-react';\n\nexport const MentionElement = withRef<\n  typeof LateElement,\n  {\n    onClick?: (mentionNode: any) => void;\n    prefix?: string;\n    renderLabel?: (mentionable: TMentionElement) => string;\n  }\n>(({ children, className, onClick, prefix, renderLabel, ...props }, ref) => {\n  const element = useElement<TMentionElement>();\n  const selected = useSelected();\n  const focused = useFocused();\n\n  return (\n    <LateElement\n      className={cn(\n        'inline-block cursor-pointer rounded-md bg-muted px-1.5 py-0.5 align-baseline text-sm font-medium',\n        selected && focused && 'ring-2 ring-ring',\n        element.children[0].bold === true && 'font-bold',\n        element.children[0].italic === true && 'italic',\n        element.children[0].underline === true && 'underline',\n        className\n      )}\n      contentEditable={false}\n      data-slate-value={element.value}\n      onClick={getHandler(onClick, element)}\n      ref={ref}\n      {...props}\n    >\n      {prefix}\n      {renderLabel ? renderLabel(element) : element.value}\n      {children}\n    </LateElement>\n  );\n});\n",
      "name": "mention-element.tsx"
    }
  ],
  "name": "mention-element",
  "registryDependencies": [],
  "type": "components:plate-ui"
}